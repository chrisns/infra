apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: hp-m575m
spec:
  secretName: hp-m575m-https
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - "hp-m575m.cns.me"

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hp-m575m
spec:
  schedule: "35 3 1 * *"
  jobTemplate:
    spec:
      template:
        spec:
          dnsPolicy: "None"
          dnsConfig:
            nameservers:
              - 192.168.0.1
          initContainers:
            - name: move-files
              image: busybox
              command: ["sh", "-c", "cp /test/* /dir"]
              volumeMounts:
                - name: emptydir
                  mountPath: /dir
                - name: robot-config
                  subPath: HPRenewal.robot
                  mountPath: /test/HPRenewal.robot
                  readOnly: false
          containers:
            - name: hp-m575m
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  ephemeral-storage: "1Gi"
              # command: ["sleep", "1000000"]
              image: marketsquare/robotframework-browser:18.4.0
              command: ["/bin/bash", "-c"]
              args:
              - |
                  cd /test && \
                  openssl pkcs12 -export -out certificate.pfx -password pass:password -inkey /cert/tls.key -in /cert/tls.crt && \
                  robot HPRenewal.robot
              envFrom:
                - secretRef:
                    name: secrets
              volumeMounts:
                - name: emptydir
                  mountPath: /test
                - name: cert
                  mountPath: /cert
                  readOnly: true

          restartPolicy: OnFailure
          volumes:
            - name: emptydir
              emptyDir: {}
            - name: cert
              secret:
                secretName: hp-m575m-https
            - name: robot-config
              configMap:
                name: hp-m575m-robot
          tolerations:
            - key: think
              operator: "Equal"
              value: "true"
              effect: "NoExecute"
          nodeSelector:
            kubernetes.io/hostname: think